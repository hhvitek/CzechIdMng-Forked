<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>eu.bcvsolutions.idm</groupId>
		<artifactId>idm-core</artifactId>
		<version>13.1.0-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<artifactId>idm-core-impl</artifactId>
	<packaging>jar</packaging>

	<name>CzechIdM Core Impl</name>
	<description>Core services implementations, entities, rest endpoint implementations</description>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Implementation-Build>${buildNumber}</Implementation-Build>
							<Specification-Title>${project.description}</Specification-Title>
						</manifestEntries>
					</archive>
				</configuration>
				<executions>
					<execution>
						<id>test-jar</id>
						<phase>test-compile</phase>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>idm-core-api</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>idm-core-test-api</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<!-- First, use the openapitools plugin to generate asciidoc -->
                    <plugin>
                        <groupId>org.openapitools</groupId>
                        <artifactId>openapi-generator-maven-plugin</artifactId>
                        <version>${openapi-generator.version}</version>
                        <executions>
                            <execution>
                                <phase>test</phase>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                                <configuration>
                                    <inputSpec>${swagger.input}</inputSpec>
                                    <output>${generated.asciidoc.directory}</output>
                                    <generatorName>asciidoc</generatorName>
                                    <skipValidateSpec>true</skipValidateSpec>
                                    <generateAliasAsModel>true</generateAliasAsModel>
                                    <configOptions>
                                        <useIntroduction>true</useIntroduction>
                                        <skipExamples>false</skipExamples>
                                    </configOptions>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

					<!--
						Run the generated asciidoc through Asciidoctor to generate other
						documentation types, such as PDFs or HTML5
					-->
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<version>2.2.1</version>
						<!-- Configure generic document generation settings -->
						<configuration>
							<sourceDirectory>${asciidoctor.input.directory}</sourceDirectory>
							<sourceDocumentName>index.adoc</sourceDocumentName>
							<attributes>
								<doctype>book</doctype>
								<toc>left</toc>
								<toclevels>2</toclevels> <!-- Resources by tag names in menu only -->
								<numbered />
								<hardbreaks />
								<sectlinks />
								<sectanchors />
								<generated>${generated.asciidoc.directory}</generated>
							</attributes>
						</configuration>
						<!--
							Since each execution can only handle one backend, run separate
							executions for each desired output type
						-->
						<executions>
							<execution>
								<id>output-html</id>
								<phase>test</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<backend>html5</backend>
									<!-- static documentation will be available as webjars -->
									<!-- e.g. http://localhost:8080/idm/webjars/core/7.3.0-rc.4-SNAPSHOT/doc/index.html -->
									<outputDirectory>${asciidoctor.html.output.directory.prefix}/core/${project.version}/doc</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
