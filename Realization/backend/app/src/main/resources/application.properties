# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
#
## active spring profile
spring.profiles.active=${spring.profiles.active}
# spring.resources.add-mappings=false
#
spring.main.lazy-initialization=true
#
## jpa
spring.jpa.show-sql=false
spring.jpa.properties.org.hibernate.envers.audit_table_suffix=_a
spring.jpa.properties.org.hibernate.envers.global_with_modified_flag=true
spring.jpa.properties.org.hibernate.envers.modified_flag_suffix=_m
spring.jpa.properties.org.hibernate.envers.audit_strategy=eu.bcvsolutions.idm.core.model.repository.listener.IdmAuditStrategy
spring.jpa.properties.hibernate.session_factory.interceptor=eu.bcvsolutions.idm.core.model.repository.listener.AuditableInterceptor
spring.jpa.properties.hibernate.listeners.envers.autoRegister=true
spring.jpa.hibernate.use-new-id-generator-mappings=false
spring.jpa.properties.hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# ZonedDateTime is stored in UTC
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
# Driver (e.g. postgres) does not support contextual LOB creation
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# connection pool setting
# https://github.com/brettwooldridge/HikariCP#configuration-knobs-baby
spring.datasource.minimumIdle=5
# spring.datasource.hikari.idleTimeout=60000
spring.datasource.maximumPoolSize=50
#
spring.h2.console.enabled=false
#
## Spring Data Rest basic configuration
# http://docs.spring.io/spring-data/rest/docs/current/reference/html/#_changing_other_spring_data_rest_properties
spring.data.rest.returnBodyOnCreate=true
spring.data.rest.returnBodyOnupdate=true
spring.data.rest.defaultPageSize=10

# Monitoring configuration
management.endpoints.web.base-path=/actuator
management.endpoints.web.exposure.include=[health, prometheus, metrics]
management.endpoint.health.show-details=always
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true

#
# Show thread name configured by thread pools (task, event) in logs (generated name is shown otherwise)
# Two appenders 'console' and 'file' are provided by product. Same configuration is needed for your custom appenders (added in logback.xml).
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} %5level %relative --- [%thread] %logger{36}.%M : %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} %5level %relative --- [%thread] %logger{36}.%M : %msg%n
# default logging config location - can be overriden by external configuration given as java parameter
logging.config=classpath:logback-spring.xml
#
## Enable the default error page displayed in browsers in case of a server error.
server.error.whitelabel.enabled=true
# Disable duplicate error log for all profiles.
logging.level.org.springframework.boot.web.servlet.support.ErrorPageFilter=OFF
#
## keep the main thread blocked so that Camel stays up
camel.springboot.main-run-controller=true
#
## Enable flyway migrations.
# - https://wiki.czechidm.com/devel/documentation/architecture/dev/flyway
spring.flyway.enabled=false
spring.flyway.check-location=false
#
## Enable scheduler
scheduler.enabled=true
scheduler.properties.location=/quartz-default.properties
scheduler.task.queue.process=1000
scheduler.event.queue.process=500
scheduler.event.executor.queueCapacity=50
# Asynchronous task processing is stopped.
# Asynchronous task processing is stopped, when instance for processing is switched => prevent to process asynchronous task in the meantime.
# Asynchronous task processing can be stopped for testing or debugging purposes.
# Asynchronous task are still created in queue, but they are not processed automatically - task can be executed manually from ui.
idm.sec.core.scheduler.task.asynchronous.stopProcessing=false
#
# Asynchronous event processing
# disable / enable asynchronous event processing. Events will be executed synchronously, if it's disabled. Enabled by default.
idm.sec.core.event.asynchronous.enabled=true
# Asynchronous event processing is stopped.
# Event processing is stopped, when instance for processing is switched => prevent to process instances in the meantime.
# Asynchronous event processing can be disabled for testing or debugging purposes.
# Events are still created in queue, but they are not processed.
idm.sec.core.event.asynchronous.stopProcessing=false
# Asynchronous events will be executed on server instance with id. Default is the same as {@link ConfigurationService#getInstanceId()} (current server instance).
idm.sec.core.event.asynchronous.instanceId=
# Asynchronous events will be executed in batch - batch will be split for event with HIGH / NORMAL priority in 70% HIGH / 30% NORMAL.
# If you events are processed quickly (~provisioning on your environment is quick), then batch size can be higher (in combination with higher 'scheduler.event.queue.process' property).
idm.sec.core.event.asynchronous.batchSize=15
#
## String boot properties for Activiti workflow engine
# https://github.com/Activiti/Activiti/blob/master/modules/activiti-spring-boot/spring-boot-starters/activiti-spring-boot-starter-basic/src/main/java/org/activiti/spring/boot/ActivitiProperties.java
spring.activiti.databaseSchemaUpdate=true
# disable automatic jpa entities persisting
spring.activiti.jpaEnabled=false
# Automatic process deployment
spring.activiti.checkProcessDefinitions=true
spring.activiti.processDefinitionLocationPrefix=classpath*:eu/bcvsolutions/idm/workflow/
spring.activiti.processDefinitionLocationSuffixes=**/**.bpmn20.xml
#
## Check that the templates location exists is disabled not
spring.velocity.checkTemplateLocation=false
spring.velocity.resourceLoaderPath=classpath*:eu/bcvsolutions/idm/templates/
#
## Swagger config
# enable swagger endpoint (can be disabled for development etc.)
springdoc.swagger-ui.enabled=true
# endpoint with exposed documentations. Documentations are exposed by module e.g. <server>/api/doc/core
springdoc.api-docs.path=/api/doc
springdoc.swagger-ui.doc-expansion=none
springdoc.swagger-ui.operationsSorter=alpha
springdoc.swagger-ui.tagsSorter=alpha
springdoc.default-consumes-media-type=application/json
springdoc.default-produces-media-type=application/hal+json
springdoc.pre-loading-enabled=true
#
# Cipher secret key for crypt values in confidential storage
# for crypt values is used secretKey or secretKey defined by file - secretKeyPath
# Can be empty => confidential storage will not be crypted, application cannot be used in production (dev, test only).
cipher.crypt.secret.key=
# cipher.crypt.secret.keyPath=/path/to/key
#
# use cglib for proxies by default
spring.aop.proxy-target-class=true
#
# allowed origins for FE
idm.pub.security.allowed-origins=http://localhost:3000,http://localhost
# auth token
# - expiration in mils
idm.sec.security.jwt.expirationTimeout=6000000
# - secret jwt password
idm.sec.security.jwt.secret.token=idmSecret
# ID system against which to authenticate
idm.sec.security.auth.system=
# extend JWT token expiration period on each successful request
idm.sec.security.jwt.token.extend.expiration=true

#
## Emailer
# enable test mode - in this mode, emails are not send
idm.sec.core.emailer.test.enabled=true
idm.sec.core.emailer.protocol=smtp
idm.sec.core.emailer.host=localhost
idm.sec.core.emailer.port=25
idm.sec.core.emailer.username=
idm.sec.core.emailer.password=
idm.sec.core.emailer.from=
#
# Application stage
idm.pub.app.stage=
# Application instance / server id
idm.pub.app.instanceId=idm-primary
# Frontend server url. 
# E.g. http://localhost:3000
# Default: The first 'idm.pub.security.allowed-origins' configured value is used (~ backward compatible).
# @since 12.0.0
idm.pub.app.frontend.url=
# Backend server url. 
# E.g. http://localhost:8080/idm
# Default: Url is resolved dynamically from current servlet request.
# @since 12.0.0
idm.pub.app.backend.url=
# create demo data at application start (if not created)
idm.sec.core.demo.data.enabled=true
# Create init data at application start. Init data (product provided roles) are updated automatically with pruct updates.
# Set property to false to disable init data creation and updates.
idm.sec.core.init.data.enabled=true
# enable all product modules by default (except example)
idm.pub.acc.enabled=true
idm.pub.rpt.enabled=true
idm.pub.vs.enabled=true
#
# supports delete identity
idm.pub.core.identity.delete=true
#
# default password change type for custom users, one of values:
# DISABLED - password change is disable
# ALL_ONLY - users can change passwords only for all accounts
# CUSTOM - users can choose for which accounts change password
idm.pub.core.identity.passwordChange=ALL_ONLY
#
# required old password for change password
idm.pub.core.identity.passwordChange.requireOldPassword=true
#
# Create default identity's contract, when identity is created.
# Skipped in synchronizations - contract synchronization should be provided.
idm.sec.core.identity.create.defaultContract.enabled=
# Creates default identity's contract with configured position name.
idm.sec.core.identity.create.defaultContract.position=Default
# Creates default identity's contract with configured state. Valid contract will be crated by default, other possible values:
# EXCLUDED - Excluded from evidence - remains valid, but roles assigned for this contract are not added for logged identity.
# DISABLED - Invalid by user - not changed by dates.
idm.sec.core.identity.create.defaultContract.state=
# Number of days related to current date - will be used for set contract valid till date (current date + expiration in days = valid till).
# Contact valid till will not be set by default (~ contract expiration is not configured by default).
idm.sec.core.identity.create.defaultContract.expiration=
#
# supports authorization policies for extended form definitions and their values
idm.sec.core.identity.formAttributes.secured=false
#
# Profile image max file size in readable string format (e.g. 200KB).
idm.sec.core.identity.profile.image.max-file-size=512KB
#
# Default user role will be added automatically, after an identity is logged in
# could contains default authorities and authority policies configuration
# for adding autocomplete or all record read permission etc.
# Role full code should be given (should contain environment, if it is used).
# Role authorities are updated automatically, when new IdM version is installed.
idm.sec.core.role.default=userRole
#
# Admin user role
# Role full code should be given (should contain environment, if it is used).
# Role authorities are updated automatically, when new IdM version is installed.
idm.sec.core.role.admin=superAdminRole
#
# Helpdesk user role
# Role full code should be given (should contain environment, if it is used).
# Role authorities are updated automatically, when new IdM version is installed.
idm.sec.core.role.helpdesk=helpdeskRole
#
# User manager role
# Role full code should be given (should contain environment, if it is used).
# Role authorities are updated automatically, when new IdM version is installed.
idm.sec.core.role.userManager=userManagerRole
#
# Role manager role - role guarantee
# Role full code should be given (should contain environment, if it is used).
# Role authorities are updated automatically, when new IdM version is installed.
idm.sec.core.role.roleManager=roleManagerRole
#
# Separator for the suffix with environment used in role code.
# Look out: when separator is changed, then all roles should be updated (manually from ui, by scripted LRT or by change script).
idm.sec.core.role.codeEnvironmentSeperator=|
#
# Properties for load template from templates folders by modules
idm.sec.core.notification.template.folder=classpath*:/eu/bcvsolutions/idm/templates/
idm.sec.core.notification.template.fileSuffix=**/**.xml
#
# Properties for load script from folders by module
idm.sec.core.script.folder=classpath*:/eu/bcvsolutions/idm/scripts/
idm.sec.core.script.fileSuffix=**/**.xml
#
# ID system against which to authenticate
# idm.sec.security.auth.system=
#
#
# processors - automatic role by tree node
idm.sec.core.processor.role-tree-node-create-approve-processor.enabled=true
idm.sec.core.processor.role-tree-node-create-approve-processor.wf=approve-create-automatic-role
idm.sec.core.processor.role-tree-node-delete-approve-processor.enabled=true
idm.sec.core.processor.role-tree-node-delete-approve-processor.wf=approve-delete-automatic-role
#
## identity filters
## managers by standard tree structure (manager will be found by contract on parent node)
idm.sec.core.filter.IdmIdentity.managersFor.impl=defaultManagersFilter
## managers by relation in eav attribute (manager will be found by code in eav on parent node)
# idm.sec.core.filter.IdmIdentity.managersFor.impl=eavCodeManagersFilter
# extended form definition name
# idm.sec.core.filter.IdmIdentity.managersFor.formDefinition=default
# extended attribute name - value contains superior node code
# idm.sec.core.filter.IdmIdentity.managersFor.formAttribute=parentCode
#
## subordinates by standard tree structure (manager will be found by contract on parent node)
idm.sec.core.filter.IdmIdentity.subordinatesFor.impl=defaultSubordinatesFilter
## subordinates by relation in eav attribute (subordinates will be found by code in eav on parent node)
# idm.sec.core.filter.IdmIdentity.subordinatesFor.impl=eavCodeSubordinatesFilter
# extended form definition name
# idm.sec.core.filter.IdmIdentity.subordinatesFor.formDefinition=default
# extended attribute name - value contains superior node code
# idm.sec.core.filter.IdmIdentity.subordinatesFor.formAttribute=parentCode
#
#
## WF
# Global property that allow disable or enable sending notification from WF
idm.sec.core.wf.notification.send=false
# Approve by manager
idm.sec.core.wf.approval.manager.enabled=false
# Approve by security department
idm.sec.core.wf.approval.security.enabled=false
idm.sec.core.wf.approval.security.role=Security
# Approve by helpdesk department
idm.sec.core.wf.approval.helpdesk.enabled=false
idm.sec.core.wf.approval.helpdesk.role=Helpdesk
# Approve by usermanager department
idm.sec.core.wf.approval.usermanager.enabled=false
idm.sec.core.wf.approval.usermanager.role=Usermanager
# Approve a role incompatibilities - If some incompatibilities are found in request, then this approving will be executed.
idm.sec.core.wf.approval.incompatibility.enabled=true
idm.sec.core.wf.approval.incompatibility.role=Incompatibility
# Approval wf by role priority
idm.sec.core.wf.role.approval.1=approve-role-by-manager
idm.sec.core.wf.role.approval.2=approve-role-by-guarantee
idm.sec.core.wf.role.approval.3=approve-role-by-guarantee-security
# Approval wf for unassign role (one remove WF for whole application)
idm.sec.core.wf.role.approval.remove=approve-remove-role-by-manager
# Approve a change on the role - Is uses in the request of changing a role.
# In the request to create new role is also used.
idm.sec.core.wf.approval.role-change.role=

# Enable sending notification of changing roles to user, whose account will be modified
# idm.sec.core.wf.notification.applicant.enabled=false
# Enable sending notification of changing roles to user, who made request
idm.sec.core.wf.notification.implementer.enabled=true
#
# Identity changed monitored fields - Check if defined fields on identity was changed. If yes, then send notification.
# Default is disabled
idm.sec.core.processor.identity-monitored-fields-processor.enabled=false
# Monitored fields on change (for Identity, extended attributes are not supported)
idm.sec.core.processor.identity-monitored-fields-processor.monitoredFields=firstName, lastName
# Notification will be send to all identities with this role
idm.sec.core.processor.identity-monitored-fields-processor.recipientsRole=superAdminRole
#
# configuration property for default backup
# idm.sec.core.backups.default.folder.path=/tmp/backup
#
# Proxy for HTTP requests
# idm.sec.core.http.proxy=12.34.56.78:1234
#
## Attachment manager
# attachments will be stored under this path.
# new directories for attachment will be created in this folder (permissions has to be added)
# System.getProperty("user.home")/idm_data will be used if no path is given
# idm.sec.core.attachment.storagePath=/opt/data
# temporary files for attachment processing (e.g. temp files for download / upload)
# getStoragePath()/temp will be used if no path is given
# idm.sec.core.attachment.tempPath=/opt/data/temp
# temporary file time to live in milliseconds
# older temporary files will be purged, default 14 days
idm.sec.core.attachment.tempTtl=1209600000
#
# Max file size of uploaded file. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
# Application server (e.g. Tomcat "maxSwallowSize" connector parameter) has to be set properly too (e.g. <Connector port="8080" maxSwallowSize="-1" ...)
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB

# It is number of days, when contract will be not
# terminated, if a next slice exists and diff of his contract valid from
# (and current slice contract valid till) is lower then this interval.
idm.sec.core.contract-slice.protection-interval=0

## Single Sign On
# Allow SSO authentication
idm.sec.core.authentication-filter.core-sso-authentication-filter.enabled=false
# The name of the header which contains the login of the authenticated user
idm.sec.core.authentication-filter.core-sso-authentication-filter.header-name=REMOTE_USER
# The suffixes to remove from the login - usually domains
idm.sec.core.authentication-filter.core-sso-authentication-filter.uid-suffixes=
# The uids that can't be authenticated by SSO
idm.sec.core.authentication-filter.core-sso-authentication-filter.forbidden-uids=

## Universal requests
# Role
idm.pub.core.request.idm-role.enabled=false
# Defines type of guarantee. Requests will be approving only by guarantee with this type.
# If returns null, then all guarantees will be used for approving (no limitations).
idm.sec.core.request.idm-role.approval.guarantee-type=
## Long polling
idm.pub.app.long-polling.enabled=true

# Enable / disable  ModelMapperChecker - check registered IdM services after start.
idm.sec.core.modelmapper.checker.enabled=true

#Clusterred cache settings
#idm.sec.cache.terracota.url=localhost:9410,localhost:9420
idm.sec.cache.terracota.resource.name=main
idm.sec.cache.terracota.resource.pool.name=resource-pool
# Size in MB
idm.sec.cache.terracota.resource.pool.size=32
#
# Enable / disable check filter is properly registered, when filter is used (by entity and property name). 
# Throws exception, when unrecognized filter is used.
idm.sec.core.filter.check.supported.enabled=true
# Check count of values exceeded given maximum. 
# Related to database count of query parameters (e.g. Oracle = {@code 1000}, MSSql = {@code 2100}).
# Throws exception, when size is exceeded. Set to {@code -1} to disable this check.
idm.sec.core.filter.check.size.maximum=500
#
# Show identifiers (uuid) in frontend application. Empty value by default => identifier is shown, when application 'idm.pub.app.stage' is set to 'development'.
idm.pub.app.show.id=
# Show transaction identifiers (uuid) in frontend application 
idm.pub.app.show.transactionId=false
# Show role environment in frontend application for roles (table, role detail, niceLabel, info components, role select) 
idm.pub.app.show.environment=true
# Show role baseCode in frontend application for roles (table, role detail, niceLabel, info components, role select) 
idm.pub.app.show.role.baseCode=true
# Rendered column in role table agenda. Comma is used as separator. Order of rendered columns is preserved as configured.
# Available columns:
# - name - role name info card with link to detail
# - baseCode - role base code (without environment)
# - environment - role environment
# - disabled
# - description
idm.pub.app.show.role.table.columns=name, baseCode, environment, disabled, description
# Rendered column in role table agenda. Comma is used as separator. Order of rendered columns is preserved as configured.
# Available columns:
# - name - role name info card with link to detail
# - description
# - roleAttributes 
# - contractPosition
# - validFrom
# - validTill
# - directRole
# - automaticRole
# - baseCode
# - systemState
# - environment
# - priority
# - candicateUsers
# - action
idm.pub.app.show.role.request.table.columns=name, description, roleAttributes, contractPosition, validFrom, validTill, directRole, automaticRole, action
# Show role catalogue item code in role catalogue tree
idm.pub.app.show.roleCatalogue.tree.code=false
# Number of items (pagination) in role catalogue tree in root level.
idm.pub.app.show.roleCatalogue.tree.pagination.root.size=25
# Number of items (pagination) in role catalogue tree in other levels.
idm.pub.app.show.roleCatalogue.tree.pagination.node.size=25
# Number of items (pagination) in tree node structure in root level.
idm.pub.app.show.treeNode.tree.pagination.root.size=50
# Number of items (pagination) in tree node structure in other levels.
idm.pub.app.show.treeNode.tree.pagination.node.size=50
# Available size options for tables in frontend application
idm.pub.app.show.sizeOptions=10,25,50,100
# Show buttons for bulk actions in tables (0 = select box will be shown only).
# Count of quick access buttons for bulk actions in tables - the first count of bulk actions will be shown as button - next action will be rendered in drop down select box.
# Bulk action icon is required for quick access button - action without icon will be rendered in select box.
# Bulk action can enforce showing in quick access button (by bulk action configuration).
idm.pub.app.show.table.quickButton.count=5
# Quick button for bulk actions in tables will be included in drop down select box too (available as button + menu item with text). 
# Number of selected record is shown in drop down select header.
idm.pub.app.show.table.quickButton.menuIncluded=true
# show default form for newly created user 
# default form can be disabled => at least one configured form projection is needed
idm.pub.app.show.identity.formProjection.default=true
# Rendered column in identity table agenda. Comma is used as separator. Order of rendered columns is preserved as configured.
# Available columns:
# - username - username with link to detail
# - entityinfo - identity info card
# - lastName
# - firstName
# - externalCode - personal number
# - email
# - state
# - passwordexpiration - information about identity password epiration
# - description
# Note: Table in identity agenda can be configured with this property (common identity table with columns is not specified on FE).
# If you want to configure rendered columns for all tables generalized from identity table (e.g. on role or tree node detail), 
# you can use FE configuration https://wiki.czechidm.com/devel/documentation/application_configuration/dev/frontend
idm.pub.app.show.identity.table.columns=username, lastName, firstName, externalCode, email, state, description
idm.pub.app.show.identityRole.table.columns=role, roleAttributes, environment, owner, contractPosition, validFrom, validTill, directRole, automaticRole, incompatibleRoles
# If is true, then role-request description will be show on the detail.
# Description will hidden if this property will be false and role request
# doesn't contains any value in description (can be filled during the approval process).
idm.pub.app.show.roleRequest.description=true
#
# Configurable application theme
idm.pub.app.show.theme={ "palette": { "type": "light", "primary":       { "main": "#5cb85c", "contrastText": "#fff" }, "secondary":       { "main": "#f50057", "dark": "#c51162", "contrastText": "#fff" }, "success":       { "main": "#4caf50", "contrastText": "#ffffff" }, "warning":       { "main": "#ff9800", "contrastText": "#fff" }, "action": {"loading": "rgba(255, 255, 255, 0.7)"}, "background":       { "default": "#fafafa", "paper": "#fff" } }, "shape": {"borderRadius": 3} }
# Blue theme
# idm.pub.app.show.theme={ "palette": { "type": "light", "primary": { "main": "#1976d2", "contrastText": "#fff" }}, "shape": { "borderRadius": 15 }}
# Backward compatible theme
# idm.pub.app.show.theme={ "palette": { "type": "light", "primary": { "main": "#5cb85c", "contrastText": "#fff" }, "secondary": { "main": "#337ab7", "dark": "#2E618F", "contrastText": "#fff" }, "success":       { "main": "#4caf50", "contrastText": "#ffffff" }, "warning":       { "main": "#ff9800", "contrastText": "#fff" }} , "shape": { "borderRadius": 3 }}
#
# Configurable application logo (attachment uuid identifier)
# Recommended logo size is 165 x 40 px.
idm.pub.app.show.logo=
# Show logout content (~ page) with message, after user is logged out.
idm.pub.app.show.logout.content=false
# Footer help link url.
idm.pub.app.show.footer.help.link=https://wiki.czechidm.com/start
# Footer service desk link url.
idm.pub.app.show.footer.serviceDesk.link=https://redmine.czechidm.com/projects/czechidmng
#
# Universal search on main navigation panel. You can disable every type for searching:
idm.sec.core.universal-search-type.identity.enabled=true
idm.sec.core.universal-search-type.role.enabled=true
idm.sec.acc.universal-search-type.system.enabled=true
#
# CAS authentication filter
# Enable authentication via CAS. If enabled, "idm.sec.core.cas.url" become mandatory and must be set for SSO authentication via CAS to work. Default: false
idm.pub.core.cas.enabled=false
# Other properties
# Base URL where CAS is accessible. Syntax of this field is https://hostname-of-CAS/URI.
idm.sec.core.cas.url=
# IdM service name configured as service on CAS server. 
# When service is configured, then login and logout redirect urls, should be defined directly in CAS service configuration.
# Default: service name for login / logout is created dynamically by BE server url (recommended).
idm.sec.core.cas.service=
# Suffix which is, in effect, appended to idm.sec.core.cas.url. Resulting URL is used for login operation in CAS. It must start with slash (eg. /login).
idm.sec.core.cas.login-path=/login
# Suffix which is appended to idm.sec.core.cas.url. Resulting URL is used for single sign-out operation. It must start with slash (eg. /logout).
idm.sec.core.cas.logout-path=/logout
# Ticket can be given as request parameter (recommended, configured by default).
idm.sec.core.cas.parameter-name=ticket
# Header name in which CAS sends the ticket value. Ticket can be given as request header. Not configured by default.
idm.sec.core.cas.header-name=
# Path to CzechIdM for the HTTP Referer header used by CAS while redirecting back to application. This value is concatenated with CAS ticket to form Referer header. Syntax of this field is https://hostname-of-CzechIdM/URI/?ticket=. Not configured by default.
idm.sec.core.cas.header-prefix=
#
# Override default lazy initialization for spring beans introduced in Spring Boot 2.2
spring.main.lazy-initialization=false